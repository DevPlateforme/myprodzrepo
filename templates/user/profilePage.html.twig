{% extends 'base.html.twig' %}


{% block body %}




<style>





   #bgDiv{

     

      height:91vh; 
      width:100vw; 
      display:flex; 
      justify-content:flex-start; 
      
      margin-top: 8vh;


       }

   #nextDayButton{


       margin-bottom: 5%;
   }

   #firstDiv{

       display:flex; 
       flex-direction: column; 
       justify-content: space-around; 
       width:25%; 
       align-items:center;
       
       
   }

    

    #secondDiv{
       display:flex; 
       flex-direction: column; 
       justify-content: space-around;  
       width:75%; 
       align-items:center;

    }

    #secondDivFirst{

        width:100%; 
        height:50%; 
        display:flex;
        flex-direction: row;
        justify-content: space-between;
    }

    #secondDivFirstG1{

        height:100%; 
        width:50%; 

    }

     #secondDivFirstG2{

         height:100%; 
         width:50%; 
     }


    #secondDivSecond{

       width:100%; 
       height:50%; 
       display:flex;

       margin-top: 4vh;

     }

     
    #secondDivSecondG1{
        width:50%; 
        height: 100%; 
    }

    #secondDivSecondG2{
        width:50%;
        height: 100%; 

    }


  
    #avatarDiv{
       display:flex; 
       justify-content: center; 
       height: 50%; 
       width: 100%;
    }


    #avatarImg{

        height: auto;

        width: 80%;
    }


    #starImg{


        height: 18px;

        width: auto;
    }

    
  @media all and (max-width: 1500px){

    #bgDiv{

      height:91vh; 
      width:100vw; 
      display:flex; 
      justify-content:flex-start; 

      padding: 20px;

       }

   

#secondDiv{

}

  #avatarDiv{
       display:flex; 
       justify-content: center; 
       height: 50%; 
       width: 100%;       
    }

    #secondDiv{
        
        margin-top: 8vh;

    }



    
   #avatarImg{
     height: auto;

     width: 100%;

    }

    #starImg{

      height: 18px;

      width: auto;
    }


}


  @media all and (max-width: 1500px) and (max-height: 700px){
    
    #secondDiv{
        
        margin-top: 0px;

    }

        
   #avatarImg{
     height: auto;

     width: 80%;

    }
    

  }



  @media all and (max-width: 450px){

      
   #bgDiv{

      display:flex; 
      justify-content:flex-start; 

      flex-direction: column;
      
      margin-top: 8vh;

      height: 100%;


      padding-bottom : 80px;
      


       }

       #firstDiv{

           width: 100%;
       }

       #secondDiv{

           flex-direction: column;
           
           width: 100%;

           margin-top: 50px;

       }


       
    #secondDivFirst{

        width:100%; 
        height:500px; 
        display:flex;
        flex-direction: column;
        justify-content: space-between;

    }


    #secondDivSecond{

       width:100%; 
       height:50%; 
       display:flex;
       flex-direction: column;

       margin-top: 4vh;

     }  

      #secondDivFirstG1{

        height:50%; 
        width:100%; 
        

    }

     #secondDivFirstG2{

         height:50%; 
         width:100%; 

     }

       
    #secondDivSecondG1{
        height: 50%;
        width:100%; 
 
    }

    #secondDivSecondG2{

        margin-top: 70px;
        height: 50%; 
        width:100%;

    }


  }
    

   </style>



<div id='bgDiv'>

  <div id='firstDiv'>
  
      <div style='height:50%; width:100%'>

          <div style='height:30%; width: 100%; display: flex; justify-content: space-around; align-items: center; margin-top: 1vh;'>
                                <p>    <img id='starImg' style='height: 50px; width: auto' src='{{ asset("images/mail.png") }}'>Mailing : {{ app.user.mailing}} </p>
                                <button id='nextDayButton' class='btn btn-warning'><i class="fas fa-sunset fa fa-1x"></i></button>
                                
          </div>


          <div  style='height: 50%; width: 100%; display: flex; flex-direction: column; align-items: center; justify-content: space-around'>
     
                       
             
       <div style='height: 40% ; width: 100%; display: flex; justify-content: center; align-items: center; border-radius: 8px;' >                  
                  
              {% if app.user.level == 'novice' %}
                <h5>{{ app.user.level}}  <img id='starImg' src='{{ asset("images/star.png") }}'> </h5>
              {% elseif app.user.level == 'élément à fort potentiel' %}
                 <h5>{{ app.user.level}}  <img id='starImg' src='{{ asset("images/star.png") }}'>  <img id='starImg' src='{{ asset("images/star.png") }}'> </h5>
              {% elseif app.user.level == 'loup de Wall Street' %}
                 <h5>{{ app.user.level}}  <img id='starImg' src='{{ asset("images/star.png") }}'>  <img id='starImg' src='{{ asset("images/star.png") }}'>  <img id='starImg' src='{{ asset("images/star.png") }}'> </h5>
              {% elseif app.user.level == 'Jeff Bezzos' %}
                  <h5>{{ app.user.level}}  <img id='starImg' src='{{ asset("images/star.png") }}'>  <img id='starImg' src='{{ asset("images/star.png") }}'>  <img id='starImg' src='{{ asset("images/star.png") }}'>  <img id='starImg' src='{{ asset("images/star.png") }}'> </h5>

              {% endif %}

            
       </div>

                  
             
              <div id='progressDiv' style='font-size:18px'> </div>
                  
               <div>
                   <progress id='progressBar' value='1' max='100'></progress>
              </div>


               

       </div>


        </div>

        <div id='avatarDiv'>

               <div style='height: 100%; width: auto;'>
                  <img id="avatarImg" src='{{ asset( app.user.avatarAssetSrc ) }}'>
               </div>
        </div>



    </div>

  
  <div id='secondDiv'>
   
    <div id='secondDivFirst' >

        <div id='secondDivFirstG1'>

               <canvas id="myChart5"></canvas>        
        </div>

       <div id='secondDivFirstG2' >

             <canvas id="myChart3"></canvas>           
         
      </div>




    </div>

    
    <div id='secondDivSecond'>
       
       <div id='secondDivSecondG1'>

          <canvas id="myChart6"></canvas>
        
        </div>

     
        <div id='secondDivSecondG2'>
          
            <canvas id="myChart4"></canvas>

        </div>
    
    </div>


  </div>

  



  </div>


















{% endblock %}


{% block javascripts %}





var ctx3 = document.getElementById('myChart3').getContext('2d');

var ctx4 = document.getElementById('myChart4').getContext('2d');
var ctx5 = document.getElementById('myChart5').getContext('2d');

var ctx6 = document.getElementById('myChart6').getContext('2d');

var progressDiv = document.getElementById('progressDiv');

var progressBar =  document.getElementById('progressBar');


function displayChart(canvas){


var myChart = new Chart(canvas, {
    type: 'line',
    data: {
        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
        datasets: [{
            label: '# of Votes',
            data: [12, 19, 3, 5, 2, 3],
            backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)'
            ],
            borderColor: [
                'rgba(255, 99, 132, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
            ],
            borderWidth: 1
        }]
    },
    options: {
        
         animation: {

            duration: 2000
        },
        scales: {
            yAxes: [{
                ticks: {
                    beginAtZero: true
                }
            }]
        }
    }
});






}









//ratio projects done/over

var myChart = new Chart(ctx3, {
    type: 'doughnut',
    data: {
        labels: ['en cours', 'finis'],
        datasets: [{
            label: 'Etat de vos projets',
            data: [{{ unfinishedProjects }}, {{ finishedProjects }}
],
            backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)'
            ],
            borderColor: [
                'rgba(255, 99, 132, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
            ],
            borderWidth: 1
        }]
    },
    options: {
         
         animation: {

            duration: 2000
        },
        scales: {
            yAxes: [{
                ticks: {
                    beginAtZero: true
                }
            }]
        }
    }
});





//ratio projects done/over

var myChart = new Chart(ctx4, {
    type: 'doughnut',
    data: {
        labels: ['respecté', 'non respecté'],
        datasets: [{
            label: '# of Votes',

            
            data: [{{ dailyCountAverage }}, (100 - {{ dailyCountAverage }})],
            backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)'
            ],
            borderColor: [
                'rgba(255, 99, 132, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
            ],
            borderWidth: 1
        }]
    },
    options: {
    
        animation: {

            duration: 2000
        },
        scales: {
            yAxes: [{
                ticks: {
                    beginAtZero: true
                }
            }]
        }
    }
});



//dailytime

var myChart = new Chart(ctx5, {
    type: 'horizontalBar',
    data: {
        labels: ['min/jour', '', '',''],
        datasets: [{
            label: 'Moyenne minutes/jour',
            data: [ {{ averageWorkTime }} ,0,0,0],
            backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)'
            ],
            borderColor: [
                'rgba(255, 99, 132, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
            ],
            borderWidth: 1
        }]
    },
    options: {
       
       animation: {

            duration: 2000
        },
        scales: {
            yAxes: [{
                ticks: {
                    beginAtZero: true
                }
            }]
        }
    }
});








//dynamic


function displayDynamic( days, data){

var myChart = new Chart(ctx6, {
    type: 'line',
    data: {
        labels: days,
        datasets: [{
            label: 'Bonus de dynamique',
            data: data, 
            backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)'
            ],
            borderColor: [
                'rgba(255, 99, 132, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
            ],
            borderWidth: 1
        }]
    },
    options: {
        
        animation: {

            duration: 2000
        },
        scales: {
            yAxes: [{
                ticks: {
                    beginAtZero: true
                }
            }]
        }
    }
});


}




    {%if dynamic > 1 %}

            {%if dynamic == 2 %}


              displayDynamic( ['jour1', 'jour2'], [0, 20]);

            {%elseif   dynamic == 3 %}
                  
                    displayDynamic( ['jour1', 'jour2', 'jour3'], [0, 20, 30]);

            {%elseif   dynamic == 4 %}

               displayDynamic( ['jour1', 'jour2','jour3', 'jour4'], [0, 20, 30, 40]);

 
            {%elseif   dynamic >= 5 %}

                displayDynamic( ['jour1', 'jour2', 'jour3', 'jour4', 'jour5'], [0, 20, 30, 40, 50]);
         
              {%endif%}

            
  
          {%elseif  dynamic <= 1 %}
 
         
             displayDynamic( ['jour1', 'jour2', 'jour3', 'jour4', 'jour5'], [0, 0, 0, 0, 0]);


     {%endif%}


     
     //progressBar


       {% if app.user.level == 'novice' %}


        progressBar.value =  {{ app.user.competencyPoints}};

        progressBar.max = 50;

         progressDiv.innerHTML += 'niveau suivant : élément à fort potentiel'


        
       {% elseif   app.user.level == 'élément à fort potentiel' %}


        progressBar.value =  {{ app.user.competencyPoints}};

        progressBar.max = 100;

          progressDiv.innerHTML += 'niveau suivant: Loup de Wall Street'


        
       {% elseif app.user.level == 'loup de Wall Street' %}


        progressBar.value =  {{ app.user.competencyPoints}};

        progressBar.max = 150;

        progressDiv.innerHTML += 'niveau suivant: jeff Bezzos'


        
       {% elseif app.user.level == 'Jeff Bezzos' %}


        console.log(progressBar);

        progressBar.value = 100;

        progressBar.max = 100;


        progressDiv.innerHTML += '</br>Tu as atteint le niveau maximum!'



      {%endif%}
    






{% endblock %}


