{% extends 'base.html.twig' %}

{% block title %}Graph working version{% endblock %}

{% block body %}
<style>


</style>

<br>



<h3><div id='displayedWeekHTML'></div></h3>

<p>Temps journalier moyen sur ce projet : {{ averageWorkTime }} minutes</p>

<p>Dynamique actuelle : </p>


    {%if dynamic > 1 %}

    <h3>{{ dynamic }} jours travaillés d'affilée </h3>
    
     {%else%}

          Pas de dynamique en cours (à partir de 2 jours)
     {%endif%}

<p>Frequence de réalisation des objectifs journaliers : </p>

<h3> {{ averageDailyRespect}}%</h3>






<canvas id="myChart"></canvas>

<button onclick = 'lastWeekGraph()' id='lastWeekButton'>semaine précédente</button>

<button onclick= 'nextWeekGraph()'id='nextWeekButton'>semaine suivante</button>




</br>



{% endblock %}

      {% block javascripts %}



      var nextWeekButton = document.getElementById('nextWeekButton');
      var lastWeekButton = document.getElementById('lastWeekButton');

      var displayedWeek = {{displayedWeek}} ; 

      var displayedWeekHTML = document.getElementById('displayedWeekHTML');

       

       function displayWeekHTML(){

             displayedWeekHTML.innerHTML = 'Semaine' + (displayedWeek + 1) ;     
           
       }

      var currentWeek = displayedWeek ;

       function buttonsDisplay(){

          if(displayedWeek == 0){

             lastWeekButton.style.opacity = '0';

          }

            if(displayedWeek > 0){

             lastWeekButton.style.opacity = '1';

          }


          if(displayedWeek  == currentWeek ){

             nextWeekButton.style.opacity = '0';

          } else if (displayedWeek  < currentWeek){

              nextWeekButton.style.opacity = '1';

          }

      }



      window.onload = function(){ 

      displayWeekHTML();

      displayGraph();
          
      buttonsDisplay() ;
      
    } 



     var ctx = document.getElementById('myChart').getContext('2d');

  
      var day1 = {{ day1 }}
      var day2 = {{ day2 }}
      var day3 = {{ day3 }}
      var day4 = {{ day4 }}
      var day5 = {{ day5 }}
      var day6 = {{ day6 }}
      var day7 = {{ day7 }}



    


      function nextWeekGraph(){

          
          xrq = new XMLHttpRequest();

          xrq.onload = function(){

            console.log('ok');

            var response = JSON.parse(this.responseText);



            day1 = response.day1;
            day2 = response.day2;
            day3 = response.day3;
            day4 = response.day4;
            day5 = response.day5;
            day6 = response.day6;
            day7 = response.day7;

            
             displayedWeek = response.newDisplayedWeek;

             buttonsDisplay();

             displayGraph();

             displayWeekHTML();


          }

          xrq.open('POST', '{{ path( "graphNextWeekPath")}}' , true);

          xrq.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');

          xrq.send('projectId=' + {{ projectId}} + '&displayedWeek=' + displayedWeek);
    

        
      }

      function lastWeekGraph(){

          
          xrq = new XMLHttpRequest();

          xrq.onload = function(){

            console.log('ok');

            var response = JSON.parse(this.responseText);



            day1 = response.day1;
            day2 = response.day2;
            day3 = response.day3;
            day4 = response.day4;
            day5 = response.day5;
            day6 = response.day6;
            day7 = response.day7;

            
             displayedWeek = response.newDisplayedWeek;

             buttonsDisplay();

             displayGraph();

             displayWeekHTML();



          }

          xrq.open('POST', '{{ path( "graphLastWeekPath")}}' , true);

          xrq.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');

          xrq.send('projectId=' + {{ projectId}} + '&displayedWeek=' + displayedWeek);
    

      }


function displayGraph(){

    var chart = new Chart(ctx, {
    // The type of chart we want to create
    type: 'line',

    // The data for our dataset
    data: {
        labels: ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche'],
        datasets: [{
            label: 'temps travaillé/ jour (minutes)',
            backgroundColor: 'rgb(255, 99, 132)',
            borderColor: 'rgb(255, 99, 132)',
            data: [day1/60, day2/60, day3/60, day4/60, day5/60, day6/60, day7/60]
        }]
    },

    // Configuration options go here
    options: {}
});




}






        {% endblock %}
